# include <bits/stdc++.h>
using namespace std;

const int MAX_SIZE=100;

template <class T>
class Stack{
private:
    int topStack;
    T arr[MAX_SIZE];
public:
    Stack(){
        topStack=-1;
    }

    void push(T Element){
        if(topStack >= MAX_SIZE-1){
            cout<<"Stack is Full "<<endl;
        }
        topStack++;
        arr[topStack]=Element;
    }

    bool isEmpty(){
        if(topStack<0)
            return true;
        else
            return false;
    }

    T pop(){
        if(isEmpty()){
            cout<<"Stack is Empty ";
            return T(); // Return default value for type T
        }
        else {
            T poped_Element;
            poped_Element = arr[topStack];
            topStack--;
            return poped_Element;
        }
    }

    T top(){
        if(isEmpty()){
            cout<<"Stack is Empty ";
            return T();
        }
        else {
            T x= arr[topStack];
              return x;
        }
    }

    int stackSize(){
        return topStack+1;
    }

    void clear(){
        topStack=-1;
    }

    void print(){
     cout<<"[ ";
     for(int i=topStack ; i>=0 ;i--){
         cout<<arr[i]<<" ";
     }
     cout<<"]";
     cout<<endl;
    }

};
int main() {

     Stack<int>s;
     s.push(1);
     s.push(2);
     s.push(3);
     s.push(4);

     cout << s.pop() << " is popped from the stack" << endl;
     cout << "The top element is: " << s.top() << endl;

     s.print();
     s.clear();
     s.push(5);
     s.print();
     cout << "The size of the stack is: " << s.stackSize() << endl;

     cout<<"-------------------------------------------\n";

    Stack<string>s2;
    s2.push("Ahmed");
    s2.push("Mohammed");
    s2.push("Mona");
    s2.push("Noha");

    cout << s2.pop() << " is popped from the stack" << endl;
    cout << "The top element is: " << s2.top() << endl;

    s2.print();
    s2.clear();
    s2.push("Nada");
    s2.print();
    cout << "The size of the stack is: " << s2.stackSize() << endl;


    return 0;
}

